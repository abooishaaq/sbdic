// Code generated by entc, DO NOT EDIT.

package ent

import (
	"inventory-app/ent/group"
	"inventory-app/ent/item"
	"inventory-app/ent/schema"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescUUID is the schema descriptor for uuid field.
	groupDescUUID := groupFields[2].Descriptor()
	// group.DefaultUUID holds the default value on creation for the uuid field.
	group.DefaultUUID = groupDescUUID.Default.(func() uuid.UUID)
	itemFields := schema.Item{}.Fields()
	_ = itemFields
	// itemDescCount is the schema descriptor for count field.
	itemDescCount := itemFields[3].Descriptor()
	// item.DefaultCount holds the default value on creation for the count field.
	item.DefaultCount = itemDescCount.Default.(int)
	// itemDescCreatedAt is the schema descriptor for created_at field.
	itemDescCreatedAt := itemFields[4].Descriptor()
	// item.DefaultCreatedAt holds the default value on creation for the created_at field.
	item.DefaultCreatedAt = itemDescCreatedAt.Default.(func() time.Time)
	// itemDescUpdatedAt is the schema descriptor for updated_at field.
	itemDescUpdatedAt := itemFields[5].Descriptor()
	// item.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	item.DefaultUpdatedAt = itemDescUpdatedAt.Default.(func() time.Time)
	// item.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	item.UpdateDefaultUpdatedAt = itemDescUpdatedAt.UpdateDefault.(func() time.Time)
}
