// Code generated by entc, DO NOT EDIT.

package group

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the group type in the database.
	Label = "group"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldDesc holds the string denoting the desc field in the database.
	FieldDesc = "desc"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// EdgeGroupItems holds the string denoting the group_items edge name in mutations.
	EdgeGroupItems = "group_items"
	// Table holds the table name of the group in the database.
	Table = "groups"
	// GroupItemsTable is the table that holds the group_items relation/edge. The primary key declared below.
	GroupItemsTable = "group_group_items"
	// GroupItemsInverseTable is the table name for the Item entity.
	// It exists in this package in order to avoid circular dependency with the "item" package.
	GroupItemsInverseTable = "items"
)

// Columns holds all SQL columns for group fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldDesc,
	FieldUUID,
}

var (
	// GroupItemsPrimaryKey and GroupItemsColumn2 are the table columns denoting the
	// primary key for the group_items relation (M2M).
	GroupItemsPrimaryKey = []string{"group_id", "item_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultUUID holds the default value on creation for the "uuid" field.
	DefaultUUID func() uuid.UUID
)
